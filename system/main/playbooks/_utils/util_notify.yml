---
# Monitor, check and if there's a problem, provide an interactive notification
# to the user.
#
# Check systemd timers:
#   systemctl --user list-timers
#
- name: Remap input arguments
  ansible.builtin.set_fact:
    vars_util_notify:
      id: "{{ id }}"
      command: "{{ command }}"
      on_calendar: "{{ on_calendar }}"
      additional_message: "{{ additional_message }}"

- name: Create notification scripts directory if not exist
  ansible.builtin.file:
    path: "{{ config.vars.workbench_dir }}/notify_scripts"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: 0700
    state: directory
  register: notify_scripts_dir

- name: Create notify job script
  ansible.builtin.copy:
    dest: "{{ notify_scripts_dir.path }}/notify_{{ vars_util_notify.id }}"
    content: |
      #!/bin/sh
      # Note: `eval` is EVIL but no idea how to unquote Ansible
      # variable inline.
      output="$(eval {{ vars_util_notify.command }})"
      ret="$?"
      if [ "$ret" -ne 0 ]; then
        add_msg="{{ vars_util_notify.additional_message }}"
        on_calendar_msg="This notification is on calendar: {{ vars_util_notify.on_calendar }}"
        notify-send \
          "[workbench notify] {{ vars_util_notify.id }} ⚠️" \
          "$(printf "%s\n\n%s\n%s" "$output" "$add_msg" "$on_calendar_msg")"
      fi
    mode: 0700
  register: notify_job_script

- name: Get basename of the script
  ansible.builtin.set_fact:
    notify_job_basename: "{{ notify_job_script.dest | basename }}"

- name: Create systemd service and timer files
  block:
    - name: Service file
      ansible.builtin.copy:
        dest: "{{ systemd_config_path }}/{{ notify_job_basename }}.service"
        content: |
          [Unit]
          Description={{ notify_job_basename }}

          [Service]
          Type=simple
          ExecStart={{ notify_job_script.dest }}
        mode: 0644

    - name: Timer file
      ansible.builtin.copy:
        dest: "{{ systemd_config_path }}/{{ notify_job_basename }}.timer"
        content: |
          [Unit]
          Description={{ notify_job_basename }}

          [Timer]
          OnCalendar={{ vars_util_notify.on_calendar }}
          Persistent=true

          [Install]
          WantedBy=timers.target
        mode: 0644

  vars:
    systemd_config_path: "{{ lookup('env', 'XDG_CONFIG_HOME') }}/systemd/user"

- name: Enable and start systemd services
  block:
    - name: Enable service
      ansible.builtin.systemd:
        name: "{{ notify_job_basename }}.service"
        state: started
        enabled: true
        daemon_reload: true
        scope: user

    - name: Enable timer
      ansible.builtin.systemd:
        name: "{{ notify_job_basename }}.timer"
        state: started
        enabled: true
        scope: user


# vim: ft=yaml.ansible
