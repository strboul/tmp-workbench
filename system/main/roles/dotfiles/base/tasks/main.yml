---
- name: Setup zsh
  block:
    - name: Install zsh
      yay:
        name: extra/zsh
        state: present

    # add --unattended not to start the interactive prompt upon installation
    # https://github.com/ohmyzsh/ohmyzsh#unattended-install
    - name: Install oh-my-zsh
      ansible.builtin.shell: |
        script="$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" && \
          sh -c "$script" "" --unattended
      args:
        # when this file exists, this step won't run.
        creates: ~/.oh-my-zsh
      changed_when: false

    - name: oh-my-zsh custom dir
      ansible.builtin.shell: "echo ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
      register: "oh_my_zsh_custom_dir"
      changed_when: false

    - name: Install zsh-autosuggestions plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: "{{ oh_my_zsh_custom_dir.stdout }}/plugins/zsh-autosuggestions"
        depth: 1
        version: master
        update: false

    - name: Install zsh-syntax-highlighting plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ oh_my_zsh_custom_dir.stdout }}/plugins/zsh-syntax-highlighting"
        depth: 1
        version: master
        update: false

    - name: Install zsh-history-substring-search plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-history-substring-search.git
        dest: "{{ oh_my_zsh_custom_dir.stdout }}/plugins/zsh-history-substring-search"
        depth: 1
        version: master
        update: false

    - name: Install powerlevel10k prompt theme
      ansible.builtin.git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "{{ oh_my_zsh_custom_dir.stdout }}/themes/powerlevel10k"
        depth: 1
        version: master
        update: false

    - name: Add zsh to /etc/shells
      ansible.builtin.lineinfile:
        line: "{{ zsh_command }}"
        dest: /etc/shells
        state: present
      become: true
      become_method: sudo

    - name: Change default shell to zsh
      ansible.builtin.command:
        cmd: "chsh -s {{ zsh_command }} {{ ansible_env.USER }}"
      changed_when: false
      become: true
      become_method: sudo

- name: Setup neovim  # https://github.com/neovim/neovim
  block:
    - name: Install neovim
      yay: name=community/neovim state=present

    - name: Install vim-plug
      vars:
        vim_plug_path: "~/.local/share/nvim/site/autoload/plug.vim"
      ansible.builtin.shell: |
        sh -c 'curl -fLo "{{ vim_plug_path }} --create-dirs \
         https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
      args:
        creates: "{{ vim_plug_path }}"
      changed_when: false

    - name: Install neovim tools
      yay:
        name:
          - extra/ctags  # https://github.com/universal-ctags/ctags
        state: present

    - name: Install pynvim
      ansible.builtin.pip:
        name: pynvim  # python neovim modules. See `:h provider-python` in neovim
        state: present

- name: Install tmux  # https://github.com/tmux/tmux
  yay: name=community/tmux state=present

- name: Install alacritty terminal
  yay: name=community/alacritty state=present

- name: Install command-line utilities
  yay:
    name:
      - community/fzf  # https://github.com/junegunn/fzf
      - community/ripgrep  # https://github.com/BurntSushi/ripgrep
      - community/lazygit  # https://github.com/jesseduffield/lazygit
      - community/fd  # https://github.com/sharkdp/fd
      - community/bat  # https://github.com/sharkdp/bat
      - community/jq  # https://github.com/stedolan/jq
      - community/direnv  # https://github.com/direnv/direnv
      - community/hyperfine  # https://github.com/sharkdp/hyperfine
    state: present

- name: Install languages
  yay:
    name:
      - community/nodejs
      - extra/r
    state: present

- name: Setup Docker
  block:
    - name: Install Docker
      yay:
        name:
          - community/docker
          - community/docker-compose
        state: present

    - name: Setup Docker
      block:
        - name: Create the docker group
          ansible.builtin.group:
            name: docker
            state: present

        - name: Add your user to the docker group
          ansible.builtin.user:
            name: docker
            group: "{{ ansible_env.USER }}"

        # Follow the post-install steps here for the rest:
        # https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user
        #
        # reboot & reload is needed to have Docker ready.
        # check the daemon with: `systemctl status docker`
      become: true
      become_method: sudo

- name: Install linters
  yay:
    name:
      - community/shellcheck  # https://github.com/koalaman/shellcheck
    state: present

- name: Install tools
  yay:
    name:
      - extra/meld  # https://meldmerge.org
      - aur/lazydocker-bin  # https://github.com/jesseduffield/lazydocker
      - community/ranger  # https://github.com/ranger/ranger
      - community/flameshot  # https://github.com/flameshot-org/flameshot
      - community/gdu  # https://github.com/dundee/gdu
    state: present
